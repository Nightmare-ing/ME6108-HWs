import math

import numpy as np

def bresenham_line(start, end, subdivision):
    """
    Return a numpy array of discrete points generated by Bresenhan algorithm
    :param start: start point of the line
    :param end: end point of the line
    :param subdivision: number of divisions of the line
    :return: numpy, array of discrete points generated by Bresenhan algorithm
    """
    x = np.linspace(start[0], end[0], subdivision + 1)
    y = np.full(subdivision + 1, float(start[1]))
    unit = (end[0] - start[0]) / subdivision
    k = float(end[1] - start[1]) / float(end[0] - start[0])
    e = -0.5
    for i in range(1, subdivision + 1):
        e, _ = math.modf(e + k)
        if e < 0:
            y[i] = y[i - 1]
        else:
            y[i] = y[i - 1] + unit

    return x, y