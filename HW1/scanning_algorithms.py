import numpy as np

def bresenham_line(start, end, subdivision):
    """
    Return a numpy array of discrete points generated by Bresenhan algorithm
    :param start: start point of the line
    :param end: end point of the line
    :param subdivision: number of divisions of the line
    :return: numpy, array of discrete points generated by Bresenhan algorithm
    """
    x = np.linspace(start[0], end[0], subdivision)
    y = np.full(subdivision, start[1])
    k = float(end[1] - start[1]) / float(end[0] - start[0])
    d, _ = np.modf(np.arange(0, (subdivision + 1) * k, k))
    e = d - 0.5
    for i in range(1, subdivision):
        y[i] = y[i - 1] + (1 if e[i - 1] > 0 else 0)

    return x, y